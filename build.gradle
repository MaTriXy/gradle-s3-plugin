buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("com.gradle.publish:plugin-publish-plugin:0.16.0")
    }
}

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: "maven-publish"
apply plugin: 'signing'
apply plugin: "java-gradle-plugin"
apply plugin: "com.gradle.plugin-publish"

dependencies {
    implementation localGroovy()
    implementation gradleApi()
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.68'
}

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

def isReleaseVersion = !(version ==~ /(?i).*SNAPSHOT$/)
if (isReleaseVersion) {
    project.ext['upload.url'] = project.ext['upload.release.url']
} else {
    project.ext['upload.url'] = project.ext['upload.snapshot.url']
}


artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}


publishing {
    repositories {
        maven {
            name = "localPluginRepository"
            url = uri("../local-plugin-repository")
        }
        maven {
            url = version.endsWith('SNAPSHOT') ? project.ext['upload.snapshot.url'] : project.ext['upload.release.url']
            credentials {
                username = project.ext['upload.user']
                password = project.ext['upload.password']
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'gradle-s3-plugin'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Gradle S3 Plugin'
                description = 'Plugin upload and download files from AWS S3 buckets'
                url = 'https://github.com/skhatri/gradle-s3-plugin'
                properties = [
                        "intent": "plugin",
                        "domain": "cloud"
                ]
                licenses {
                    license {
                        name='The Apache Software License, Version 2.0'
                        url='http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution='repo'
                    }
                }
                developers {
                    developer {
                        id='skhatri'
                        name='Suresh Khatri'
                        email='kc2005au@gmail.com'
                        url='https://github.com/skhatri'
                    }
                }
                scm {
                    connection='scm:git:https://github.com/skhatri/gradle-s3-plugin.git'
                    developerConnection='scm:git:https://github.com/skhatri/gradle-s3-plugin.git'
                    url='https://github.com/skhatri/gradle-s3-plugin'
                }
            }
        }
    }

}

signing {
    required { isReleaseVersion }
    sign configurations.archives
    sign publishing.publications.mavenJava
}

gradle.taskGraph.whenReady {
    project.gradle.taskGraph.getAllTasks().each { tsk ->
        if (tsk.name == "signArchives") {
            allprojects {
                ext["signing.keyId"] = "${project.ext["signing.keyId"]}"
                ext["signing.secretKeyRingFile"] = "${project.ext["signing.secretKeyRingFile"]}"
                ext["signing.password"] = "${project.ext["signing.password"]}"
            }
        }
    }

}

gradlePlugin {
    plugins {
        create("com.github.skhatri.s3") {
            id = "s3"
            displayName = "Plugin upload and download files from AWS S3 buckets"
            description = "Plugin upload and download files from AWS S3 buckets"
            implementationClass = "com.github.skhatri.s3aws.plugin.S3Plugin"
        }
    }
}

pluginBundle {
    website = "https://github.com/skhatri/gradle-s3-plugin"
    vcsUrl = "https://github.com/skhatri/gradle-s3-plugin.git"
    tags = ["s3", "bucket", "upload", "download"]
}
